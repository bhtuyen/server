//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table account {
  id String [pk]
  name String [not null]
  email String [unique, not null]
  password String [not null]
  avatar String
  role Role [not null, default: 'Employee']
  phone String [not null]
  isVerified Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  employees account [not null]
  owner account
  ownerId String
  orders order [not null]
  refreshToken refresh_token [not null]
  sockets socket [not null]
}

Table dish {
  id String [pk]
  name String [not null]
  price Decimal
  description String
  image String
  status DishStatus [not null, default: 'Available']
  category DishCategory [not null, default: 'Paid']
  options String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  groupId String [not null]
  group dish_group [not null]
  dishSnapshots dish_snapshot [not null]
  dishes dish_combo [not null]
  combos dish_combo [not null]
}

Table dish_snapshot {
  id String [pk]
  name String [not null]
  price Decimal
  description String
  image String
  status DishStatus [not null, default: 'Available']
  category DishCategory [not null, default: 'Paid']
  options String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  order order
  dishId String [not null]
  dish dish [not null]
}

Table dish_combo {
  dishId String [not null]
  comboId String [not null]
  quantity Int [not null, default: 1]
  dish dish [not null]
  combo dish [not null]

  indexes {
    (dishId, comboId) [unique]
  }
}

Table dish_group {
  id String [pk]
  name String [unique, not null]
  dishes dish [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Table table {
  id String [pk]
  number String [unique, not null]
  capacity Int [not null, default: 1]
  status TableStatus [not null, default: 'Available']
  token String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  orders order [not null]
  guests guest [not null]
}

Table order {
  id String [pk]
  options String
  quantity Int [not null]
  status OrderStatus [not null, default: 'Pending']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  guestId String
  guest guest
  table table [not null]
  tableNumber String [not null]
  token String [not null]
  orderHandlerId String
  orderHandler account
  dishSnapshotId String [unique, not null]
  dishSnapshot dish_snapshot [not null]
}

Table refresh_token {
  token String [pk]
  expiresAt DateTime [not null]
  createdAt DateTime [default: `now()`, not null]
  accountId String [not null]
  account account [not null]
}

Table guest {
  id String [pk]
  refreshToken String [unique]
  expiredAt DateTime
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  tableNumber String [not null]
  table table [not null]
  token String [not null]
  orders order [not null]
  sockets socket [not null]
}

Table socket {
  socketId String [pk]
  guestId String [unique]
  guest guest
  accountId String [unique]
  account account
}

Enum DishStatus {
  Available
  Unavailable
  Hidden
}

Enum DishCategory {
  Buffet
  Paid
  ComboBuffet
  ComboPaid
}

Enum Role {
  Owner
  Employee
  Guest
}

Enum TableStatus {
  Available
  Hidden
  Reserved
}

Enum OrderStatus {
  Pending
  Processing
  Rejected
  Delivered
  Paid
}

Ref: account.ownerId > account.id

Ref: dish.groupId > dish_group.id [delete: No Action]

Ref: dish_snapshot.dishId > dish.id [delete: No Action]

Ref: dish_combo.dishId > dish.id [delete: Cascade]

Ref: dish_combo.comboId > dish.id [delete: Cascade]

Ref: order.guestId > guest.id [delete: No Action]

Ref: order.tableNumber > table.number [delete: No Action]

Ref: order.orderHandlerId > account.id [delete: Set Null]

Ref: order.dishSnapshotId - dish_snapshot.id [delete: Cascade]

Ref: refresh_token.accountId > account.id [delete: Cascade]

Ref: guest.tableNumber > table.number [delete: No Action]

Ref: socket.guestId > guest.id [delete: Set Null]

Ref: socket.accountId > account.id [delete: Set Null]